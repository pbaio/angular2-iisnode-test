<?xml version="1.0" encoding="utf-8"?>
<!--
  For more information on how to configure your Node.js application, please visit
  http://go.microsoft.com/fwlink/?LinkId=290972
  -->
<configuration>
    <appSettings />
    <system.webServer>
        <modules runAllManagedModulesForAllRequests="false"/>

        <iisnode node_env="%node_env%" nodeProcessCountPerApplication="1" maxConcurrentRequestsPerProcess="1024"
                 maxNamedPipeConnectionRetry="100" namedPipeConnectionRetryDelay="250"
                 maxNamedPipeConnectionPoolSize="512" maxNamedPipePooledConnectionAge="30000"
                 asyncCompletionThreadCount="0" initialRequestBufferSize="4096" maxRequestBufferSize="65536"
                 uncFileChangesPollingInterval="5000" gracefulShutdownTimeout="60000" loggingEnabled="true"
                 logDirectory="iisnode" debuggingEnabled="true" debugHeaderEnabled="false" debuggerPortRange="5058-6058"
                 debuggerPathSegment="debug" maxLogFileSizeInKB="128" maxTotalLogFileSizeInKB="1024" maxLogFiles="20"
                 devErrorsEnabled="true" flushResponse="false" enableXFF="false" promoteServerVars=""
                 configOverrides="iisnode.yml" watchedFiles="web.config;*.js"
                 nodeProcessCommandLine="C:\Program Files\nodejs\node.exe"/>
        <handlers>
            <add name="iisnode" path="server.js" verb="*" modules="iisnode"/>

            <!-- Uncomment below handler if using Socket.io -->
            <!--<add name="iisnode-socketio" path="server.js" verb="*" modules="iisnode" />-->
        </handlers>

        <security>       
            <requestFiltering>
                <hiddenSegments>
                    <!--<remove segment="bin" />-->
                </hiddenSegments>
            </requestFiltering>
        </security>

        <rewrite>
            <rules>
                <!-- Don't interfere with requests for node-inspector debugging -->
                <rule name="NodeInspector" patternSyntax="ECMAScript" stopProcessing="true">
                    <match url="^server.js\/debug[\/]?"/>
                </rule>

                <!-- First we consider whether the incoming URL matches a physical file in the /public folder -->
                <rule name="StaticContent" patternSyntax="Wildcard">
                    <action type="Rewrite" url="public/{R:0}" logRewrittenUrl="true"/>
                    <conditions>
                        <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="true"/>
                    </conditions>
                    <match url="*.*"/>
                </rule>

                <!-- All other URLs are mapped to the Node.js application entry point -->
                <rule name="DynamicContent">
                    <conditions>
                        <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="True"/>
                    </conditions>
                    <action type="Rewrite" url="server.js"/>
                </rule>
                <rule name="SocketIO" patternSyntax="ECMAScript">
                    <match url="socket.io.+"/>
                    <action type="Rewrite" url="server.js"/>
                </rule>
            </rules>
        </rewrite>
        <directoryBrowse enabled="false"/>
    </system.webServer>
</configuration>